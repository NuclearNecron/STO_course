# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import app.grpcio.ws_backend_pb2 as ws__backend__pb2


class WS_Backend_ServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendTimestamp = channel.unary_unary(
                '/ws_backend.WS_Backend_Service/SendTimestamp',
                request_serializer=ws__backend__pb2.SendTimestampRequest.SerializeToString,
                response_deserializer=ws__backend__pb2.SendTimestampResponse.FromString,
                )
        self.RemoveAccess = channel.unary_unary(
                '/ws_backend.WS_Backend_Service/RemoveAccess',
                request_serializer=ws__backend__pb2.RemoveAccessRequest.SerializeToString,
                response_deserializer=ws__backend__pb2.RemoveAccessResponse.FromString,
                )
        self.GetUpdates = channel.unary_unary(
                '/ws_backend.WS_Backend_Service/GetUpdates',
                request_serializer=ws__backend__pb2.GetUpdatesRequest.SerializeToString,
                response_deserializer=ws__backend__pb2.GetUpdatesResponse.FromString,
                )
        self.HandleDelete = channel.unary_unary(
                '/ws_backend.WS_Backend_Service/HandleDelete',
                request_serializer=ws__backend__pb2.HandleDeleteRequest.SerializeToString,
                response_deserializer=ws__backend__pb2.HandleDeleteResponse.FromString,
                )


class WS_Backend_ServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendTimestamp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveAccess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WS_Backend_ServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendTimestamp': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTimestamp,
                    request_deserializer=ws__backend__pb2.SendTimestampRequest.FromString,
                    response_serializer=ws__backend__pb2.SendTimestampResponse.SerializeToString,
            ),
            'RemoveAccess': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveAccess,
                    request_deserializer=ws__backend__pb2.RemoveAccessRequest.FromString,
                    response_serializer=ws__backend__pb2.RemoveAccessResponse.SerializeToString,
            ),
            'GetUpdates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUpdates,
                    request_deserializer=ws__backend__pb2.GetUpdatesRequest.FromString,
                    response_serializer=ws__backend__pb2.GetUpdatesResponse.SerializeToString,
            ),
            'HandleDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleDelete,
                    request_deserializer=ws__backend__pb2.HandleDeleteRequest.FromString,
                    response_serializer=ws__backend__pb2.HandleDeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ws_backend.WS_Backend_Service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WS_Backend_Service(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendTimestamp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ws_backend.WS_Backend_Service/SendTimestamp',
            ws__backend__pb2.SendTimestampRequest.SerializeToString,
            ws__backend__pb2.SendTimestampResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveAccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ws_backend.WS_Backend_Service/RemoveAccess',
            ws__backend__pb2.RemoveAccessRequest.SerializeToString,
            ws__backend__pb2.RemoveAccessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ws_backend.WS_Backend_Service/GetUpdates',
            ws__backend__pb2.GetUpdatesRequest.SerializeToString,
            ws__backend__pb2.GetUpdatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HandleDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ws_backend.WS_Backend_Service/HandleDelete',
            ws__backend__pb2.HandleDeleteRequest.SerializeToString,
            ws__backend__pb2.HandleDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
